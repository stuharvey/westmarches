{"version":3,"sources":["components/HexTooltip/styles.js","components/HexTooltip/HexTooltip.js","components/HexTooltip/index.js","components/Board/styles.js","components/Board/Board.js","components/Board/index.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/Navbar/index.js","components/Players/styles.js","dataUtils.js","components/Players/Players.js","components/Players/index.js","components/Pawn/Pawn.js","components/Pawn/index.js","components/Adventures/Adventures.js","components/Adventures/index.js","styles.js","App.js","constants.js","serviceWorker.js","index.js"],"names":["HexTitle","styled","h2","HexDescription","p","HexContainer","section","HexInfo","header","footer","Location","TerrainType","ReactTooltip","_ReactTooltip","HexLevel","aside","getDifficultyClass","level","HexTooltip","hovered","type","fogOfWar","title","description","split","map","key","substring","hexLevel","className","location","terrainType","BoardContainer","div","HexRow","HEX_RADIUS","Hex","TRIANGLE_HEIGHT","color","Board","hexData","onMouseOver","onMouseOut","terrainMapping","row","i","cx","odd","hex","j","data-tip","data-row","data-col","hidden","Array","fill","Nav","nav","NavItems","ul","NavItem","li","NavLink","_NavLink","Navbar","to","exact","PlayerList","PlayerItem","Player","article","MainContent","RightContent","LeftContent","Title","Description","XPBar","TotalXP","CurrentXP","CharacterImage","img","ClassLevel","Race","GoldContainer","Gold","span","parseSheetData","data","options","skipFirst","allRows","reduce","currentRows","entry","cell","parseInt","val","$t","length","push","e","console","error","slice","rows","zip","listA","listB","Error","zipped","forEach","PLAYERS_URL","parsePlayerSheet","lowerCasedHeader","column","toLowerCase","xp","Players","useState","players","setPlayers","useEffect","a","axios","result","parsedPlayers","feed","getData","player","name","src","image","class","race","style","right","Math","round","gold","Pawn","Advenutres","Adventures","Main","main","BOARD","DEFAULT_HOVER","TILE_URL","TERRAIN_URL","parseTileSheet","n","trim","parseTerrainSheet","terrainTypes","terrainObj","App","setHovered","setHexData","setTerrainMapping","hexResult","terrainResult","hexes","terrain","dataCopy","JSON","parse","stringify","useCallback","event","target","currentTarget","getAttribute","col","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.41bb2cc1.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport _ReactTooltip from \"react-tooltip\";\n\nexport const HexTitle = styled.h2`\n  font-size: 16px;\n  color: black;\n  margin: 8px;\n  margin-right: 28px;\n`;\n\nexport const HexDescription = styled.p`\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.87);\n  white-space: normal;\n  margin: 8px;\n`;\n\nexport const HexContainer = styled.section`\n  margin: 0;\n  max-width: 300px;\n  overflow: hidden;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const HexInfo = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  font-size: 10px;\n  line-height: 18px;\n  padding: 0 8px;\n\n  background: #ddd;\n  border-radius: 0 0 4px 4px;\n`;\n\nexport const Location = styled.p`\n  margin: 0;\n  font-size: 10px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nexport const TerrainType = styled.p`\n  margin: 0;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const ReactTooltip = styled(_ReactTooltip)`\n  &.__react_component_tooltip.type-light {\n    background: #eee;\n    padding: 0;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n\n    border-radius: 4px;\n\n    &.place-top::after {\n      display: none;\n    }\n  }\n`;\n\nexport const HexLevel = styled.aside`\n  color: rgba(0, 0, 0, 0.7);\n  font-size: 10px;\n  font-weight: bold;\n\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 36px;\n  width: 36px;\n  text-align: right;\n  padding: 2px;\n  border-radius: 0 4px 0 0;\n\n  &.low {\n    background: linear-gradient(45deg, transparent 36px, palegreen 0) bottom\n      left;\n  }\n\n  &.medium {\n    background: linear-gradient(45deg, transparent 36px, khaki 0) bottom left;\n  }\n\n  &.high {\n    background: linear-gradient(45deg, transparent 36px, lightcoral 0) bottom\n      left;\n    color: white;\n  }\n`;\n","import React from \"react\";\n\nimport {\n  HexTitle,\n  HexDescription,\n  HexContainer,\n  HexInfo,\n  Location,\n  ReactTooltip,\n  TerrainType,\n  HexLevel\n} from \"./styles\";\n\nfunction getDifficultyClass(level = 0) {\n  return level > 3 ? \"high\" : level > 1 ? \"medium\" : \"low\";\n}\n\nfunction HexTooltip({ hovered }) {\n  return (\n    <ReactTooltip type=\"light\">\n      <HexContainer>\n        {hovered.fogOfWar === \"TRUE\" ? (\n          <HexDescription>\n            Uncharted territory. Explore at your own risk.\n          </HexDescription>\n        ) : (\n          <>\n            <HexTitle>{hovered.title}</HexTitle>\n            {hovered.description.split(\"\\\\n\").map(description => (\n              <HexDescription key={description.substring(0, 20)}>\n                {description}\n              </HexDescription>\n            ))}\n          </>\n        )}\n        {hovered?.hexLevel > 0 && hovered.fogOfWar !== \"TRUE\" && (\n          <HexLevel className={getDifficultyClass(hovered.hexLevel)}>\n            {hovered.hexLevel}\n          </HexLevel>\n        )}\n        {(hovered.location || hovered.terrainType) && (\n          <HexInfo>\n            {hovered.terrainType && (\n              <TerrainType>\n                {hovered.terrainType === \"-\" || hovered.fogOfWar === \"TRUE\"\n                  ? \"Unknown\"\n                  : hovered.terrainType}\n              </TerrainType>\n            )}\n            {hovered.location && (\n              <Location>\n                {hovered.location[0]}, {hovered.location[1]}\n              </Location>\n            )}\n          </HexInfo>\n        )}\n      </HexContainer>\n    </ReactTooltip>\n  );\n}\n\nexport default HexTooltip;\n","import HexTooltip from \"./HexTooltip\";\n\nexport default HexTooltip;\n","import styled from \"styled-components\";\n\nimport { BOARD_SIZE } from \"../../constants\";\n\nconst TRIANGLE_HEIGHT = 7.5;\nconst HEX_RADIUS = 13;\nconst HEX_MARGIN = 1.5;\n\nexport const BoardContainer = styled.div`\n  width: ${(HEX_RADIUS + HEX_MARGIN) * 2 * BOARD_SIZE}px;\n  transform: perspective(900px) rotateX(60deg) translateY(200px);\n`;\n\nexport const HexRow = styled.div`\n  clear: left;\n\n  &.hidden {\n    visibility: hidden;\n  }\n\n  &.odd {\n    margin-left: ${HEX_RADIUS + HEX_MARGIN / 2}px;\n  }\n`;\n\nexport const Hex = styled.div`\n  margin-left: ${HEX_MARGIN}px;\n  margin-bottom: ${HEX_MARGIN}px;\n  float: left;\n  margin-top: ${TRIANGLE_HEIGHT}px;\n  width: ${HEX_RADIUS * 2}px;\n  height: ${TRIANGLE_HEIGHT * 2}px;\n  background-color: ${({ color }) => color};\n  position: relative;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  transition: transform 0.1s ease-in-out, box-shadow 0.1s ease-in-out;\n\n  &.hidden {\n    visibility: hidden;\n  }\n\n  &:hover {\n    z-index: 10;\n    transform: scale(1.4);\n    box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2),\n      0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n  }\n\n  &::before {\n    content: \"\";\n    width: 0;\n    height: 0;\n    border-bottom: ${TRIANGLE_HEIGHT}px solid ${({ color }) => color};\n    border-left: ${HEX_RADIUS}px solid transparent;\n    border-right: ${HEX_RADIUS}px solid transparent;\n    position: absolute;\n    top: -${TRIANGLE_HEIGHT}px;\n  }\n\n  &::after {\n    content: \"\";\n    width: 0;\n    position: absolute;\n    bottom: -${TRIANGLE_HEIGHT}px;\n    border-top: ${TRIANGLE_HEIGHT}px solid ${({ color }) => color};\n    border-left: ${HEX_RADIUS}px solid transparent;\n    border-right: ${HEX_RADIUS}px solid transparent;\n  }\n`;\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport { Hex, HexRow, BoardContainer } from \"./styles\";\n\nfunction Board({ hexData, onMouseOver, onMouseOut, terrainMapping }) {\n  return (\n    <BoardContainer>\n      {hexData.map((row, i) => (\n        <HexRow key={i} className={cx({ odd: i % 2 === 1 })}>\n          {row.map((hex, j) => {\n            return (\n              <Hex\n                key={`${i}-${j}`}\n                data-tip=\"React-tooltip\"\n                data-row={i}\n                data-col={j}\n                color={\n                  hex?.fogOfWar === \"TRUE\"\n                    ? \"slategray\"\n                    : hex?.color !== \"-\"\n                    ? hex.color\n                    : hex?.terrainType !== \"-\"\n                    ? terrainMapping[hex.terrainType]?.color\n                    : \"transparent\"\n                }\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n                className={cx({ hidden: !hex?.title })}\n              />\n            );\n          })}\n        </HexRow>\n      ))}\n      <HexRow odd>\n        {Array(20)\n          .fill({})\n          .map((row, i) => (\n            <Hex\n              key={`bottom-${i}`}\n              data-tip=\"React-tooltip\"\n              color={\"#383838\"}\n              className={cx({ hidden: i !== 10 })}\n            />\n          ))}\n      </HexRow>\n    </BoardContainer>\n  );\n}\n\nexport default Board;\n","import Board from \"./Board\";\n\nexport default Board;\n","import styled from \"styled-components\";\nimport { NavLink as _NavLink } from \"react-router-dom\";\n\nexport const Nav = styled.nav`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const NavItems = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  display: flex;\n  height: 50px;\n  background: #eee;\n`;\n\nexport const NavItem = styled.li`\n  flex: 1 0 auto;\n`;\n\nexport const NavLink = styled(_NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  text-align: center;\n  min-width: 80px;\n  text-transform: uppercase;\n  font-weight: 900;\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 14px;\n  line-height: 50px;\n  height: 50px;\n\n  padding: 0 16px;\n\n  &.active {\n    color: rgba(0, 0, 0, 0.87);\n  }\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\n","import React from \"react\";\n\nimport { Nav, NavLink, NavItems, NavItem } from \"./styles\";\n\nfunction Navbar() {\n  return (\n    <Nav>\n      <NavItems>\n        <NavItem>\n          <NavLink to=\"/westmarches\" exact>\n            Map\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/westmarches/players\">Characters</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/westmarches/adventures\">Adventures</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink to=\"/westmarches/pawn\">Perenolde's Pawn Palace</NavLink>\n        </NavItem>\n      </NavItems>\n    </Nav>\n  );\n}\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const PlayerList = styled.ul`\n  flex: 0 1 488px;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const PlayerItem = styled.li`\n  width: 100%;\n`;\n\nexport const Player = styled.article`\n  width: 100%;\n\n  margin-bottom: 16px;\n  background: #eee;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  position: relative;\n`;\n\nexport const MainContent = styled.div`\n  display: flex;\n`;\n\nexport const RightContent = styled.div`\n  flex: 1;\n  padding: 12px 12px 12px 0;\n`;\n\nexport const LeftContent = styled.div`\n  flex: 0 0 90px;\n\n  text-align: center;\n  font-size: 10px;\n  color: rgba(0, 0, 0, 0.54);\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: bold;\n`;\n\nexport const Description = styled.p`\n  margin: 0;\n  font-size: 12px;\n  color: rgba(0, 0, 0, 0.54);\n  margin-top: 6px;\n`;\n\nexport const XPBar = styled.footer`\n  p {\n    text-align: center;\n    line-height: 18px;\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.38);\n    margin: 0;\n  }\n`;\n\nexport const TotalXP = styled.div`\n  background: #d6d6d6;\n  position: relative;\n  height: 4px;\n`;\n\nexport const CurrentXP = styled.div`\n  background: #89d9de;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const CharacterImage = styled.img`\n  margin: 12px 12px 6px;\n  display: block;\n  width: 75px;\n  height: 75px;\n  border: 1px solid black;\n`;\n\nexport const ClassLevel = styled.p`\n  margin: 0;\n  font-weight: bold;\n  line-height: 16px;\n`;\n\nexport const Race = styled.p`\n  font-size: 10px;\n  margin: 0;\n`;\n\nexport const GoldContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 12px;\n\n  font-size: 10px;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.38);\n`;\n\nexport const Gold = styled.span`\n  display: inline-block;\n  background: #ffde6b;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  margin-left: 2px;\n`;\n","export function parseSheetData(data, options = { skipFirst: 0 }) {\n  // take data from the above sheet and parse it to machine readable\n  const allRows = data.reduce(\n    (currentRows, entry) => {\n      try {\n        const cell = entry[\"gs$cell\"];\n        const row = parseInt(cell?.row, 10) - 1;\n        const val = cell.$t;\n\n        if (currentRows.length <= row) {\n          currentRows.push([]);\n        }\n        currentRows[row].push(val);\n        return currentRows;\n      } catch (e) {\n        console.error(\"Error parsing rows from API\");\n        throw e;\n      }\n    },\n    [[]]\n  );\n  const [header, ...rows] = allRows.slice(options.skipFirst || 0);\n  return { header, rows };\n}\n\nexport function zip(listA, listB) {\n  if (listA?.length !== listB?.length) {\n    throw new Error(\"zip() requires two equal length arrays\");\n  }\n  const zipped = {};\n  listA.forEach((key, i) => (zipped[key] = listB[i]));\n  return zipped;\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  PlayerList,\n  PlayerItem,\n  Player,\n  XPBar,\n  Title,\n  MainContent,\n  LeftContent,\n  RightContent,\n  Description,\n  TotalXP,\n  CurrentXP,\n  CharacterImage,\n  Race,\n  ClassLevel,\n  Gold,\n  GoldContainer\n} from \"./styles\";\n\nimport { parseSheetData, zip } from \"../../dataUtils\";\n\nconst PLAYERS_URL =\n  \"https://spreadsheets.google.com/feeds/cells/1EHjx9oHnOT7sRLwalgnp0DI1cXzRYYMtptOOSEdxRak/1/public/full?alt=json\";\n\nconst MAX_XP = 300;\n\nfunction parsePlayerSheet(data) {\n  const { header, rows } = parseSheetData(data, { skipFirst: 1 });\n  const lowerCasedHeader = header.map(column => column.toLowerCase());\n  return rows\n    .map(row => zip(lowerCasedHeader, row))\n    .map(row => ({ ...row, xp: parseInt(row.xp, 10) }));\n}\n\nfunction Players() {\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      const result = await axios(PLAYERS_URL);\n      const parsedPlayers = parsePlayerSheet(result?.data?.feed?.entry);\n      setPlayers(parsedPlayers);\n    }\n    getData();\n  }, []);\n\n  return (\n    <PlayerList>\n      {players.map(player => (\n        <PlayerItem key={player.name}>\n          <Player>\n            <MainContent>\n              <LeftContent>\n                <CharacterImage src={player.image} />\n                <ClassLevel>\n                  {player.class} {player.level}\n                </ClassLevel>\n                <Race>{player.race}</Race>\n              </LeftContent>\n              <RightContent>\n                <Title>{player.name}</Title>\n                <Description>{player.description}</Description>\n              </RightContent>\n            </MainContent>\n            <XPBar>\n              <p>\n                {player.xp}/{MAX_XP}\n              </p>\n              <TotalXP>\n                <CurrentXP\n                  style={{\n                    right: `${Math.round((player.xp / MAX_XP) * 100)}%`\n                  }}\n                />\n              </TotalXP>\n            </XPBar>\n            <GoldContainer>\n              <p>\n                {player.gold}\n                <Gold />\n              </p>\n            </GoldContainer>\n          </Player>\n        </PlayerItem>\n      ))}\n    </PlayerList>\n  );\n}\n\nexport default Players;\n","import Players from \"./Players\";\n\nexport default Players;\n","import React from \"react\";\n\nfunction Pawn() {\n  return \"Coming later!\";\n}\n\nexport default Pawn;\n","import Pawn from \"./Pawn\";\n\nexport default Pawn;\n","import React from \"react\";\n\nfunction Advenutres() {\n  return \"Coming soonish!\";\n}\n\nexport default Advenutres;\n","import Adventures from \"./Adventures\";\n\nexport default Adventures;\n","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n  background: lightgray;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport HexTooltip from \"./components/HexTooltip\";\nimport Board from \"./components/Board\";\nimport Navbar from \"./components/Navbar\";\nimport Players from \"./components/Players\";\nimport Pawn from \"./components/Pawn\";\nimport Adventures from \"./components/Adventures\";\nimport { Main } from \"./styles\";\nimport { BOARD_SIZE } from \"./constants\";\nimport { parseSheetData, zip } from \"./dataUtils\";\n\nconst BOARD = Array(BOARD_SIZE).fill(Array(BOARD_SIZE).fill({}));\n\nconst DEFAULT_HOVER = {\n  title: \"Westwall\",\n  description:\n    \"A small but bustling town sitting at the farthest reaches of civilization. Adventurers flock here, seeking fame and fortune in the wilds west of the wall.\"\n};\n\nconst TILE_URL =\n  \"https://spreadsheets.google.com/feeds/cells/1-Oc-nzUgM8HB1S7EL9Dgs8i3KpyBC5NUe7G1Fd2KC2I/1/public/full?alt=json\";\n\nconst TERRAIN_URL =\n  \"https://spreadsheets.google.com/feeds/cells/1-Oc-nzUgM8HB1S7EL9Dgs8i3KpyBC5NUe7G1Fd2KC2I/2/public/full?alt=json\";\n\nfunction parseTileSheet(data) {\n  const { header, rows: hexes } = parseSheetData(data);\n  const zipped = hexes.map(hex => zip(header, hex));\n  return zipped.map(hex => ({\n    ...hex,\n    location: hex.location.split(\",\").map(n => parseInt(n.trim())),\n    hexLevel: hex.hexLevel !== \"-\" ? parseInt(hex.hexLevel) : 0\n  }));\n}\n\nfunction parseTerrainSheet(data) {\n  const { header, rows } = parseSheetData(data);\n  return rows.reduce((terrainTypes, row) => {\n    const terrainObj = zip(header, row);\n    terrainTypes[terrainObj.terrainType] = terrainObj;\n    return terrainTypes;\n  }, {});\n}\n\nfunction App() {\n  const [hovered, setHovered] = useState(DEFAULT_HOVER);\n  const [hexData, setHexData] = useState(BOARD);\n  const [terrainMapping, setTerrainMapping] = useState({});\n\n  useEffect(() => {\n    async function getData() {\n      const hexResult = await axios(TILE_URL);\n      const terrainResult = await axios(TERRAIN_URL);\n      const hexes = parseTileSheet(hexResult?.data?.feed?.entry);\n      const terrain = parseTerrainSheet(terrainResult?.data?.feed?.entry);\n      const dataCopy = JSON.parse(JSON.stringify(BOARD));\n      hexes.forEach(hex => {\n        const { location } = hex;\n        dataCopy[location[0]][location[1]] = hex;\n      });\n      setHexData(dataCopy);\n      setTerrainMapping(terrain);\n    }\n    getData();\n  }, []);\n\n  const onMouseOver = useCallback(\n    event => {\n      const target = event.currentTarget;\n      const row = parseInt(target.getAttribute(\"data-row\"));\n      const col = parseInt(target.getAttribute(\"data-col\"));\n\n      setHovered({ ...hexData[row][col] });\n    },\n    [hexData]\n  );\n\n  const onMouseOut = useCallback(() => setHovered(DEFAULT_HOVER), []);\n\n  return (\n    <Router>\n      <Main>\n        <Navbar />\n\n        <Switch>\n          <Route path=\"/westmarches/players\">\n            <Players />\n          </Route>\n          <Route path=\"/westmarches/adventures\">\n            <Adventures />\n          </Route>\n          <Route path=\"/westmarches/pawn\">\n            <Pawn />\n          </Route>\n          <Route path=\"/westmarches\">\n            <Board\n              hexData={hexData}\n              terrainMapping={terrainMapping}\n              onMouseOver={onMouseOver}\n              onMouseOut={onMouseOut}\n            />\n            <HexTooltip hovered={hovered} />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/westmarches\" />\n          </Route>\n        </Switch>\n      </Main>\n    </Router>\n  );\n}\n\nexport default App;\n","export const BOARD_SIZE = 20;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}